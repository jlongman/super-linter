Example
=======

   >>> import io
   >>> import itertools
   >>> from lib.bb.checkstyle import Parser
   >>> in_messages = ("Starting audit...\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:1: Missing package-info.java file. [JavadocPackage]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:4:5: Missing a Javadoc comment. [JavadocVariable]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:6:5: Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'getVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'getVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:5: Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'setVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'setVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:28: Parameter version should be final. [FinalParameters]\n[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:35: 'version' hides a field. [HiddenField]\nAudit done.\nCheckstyle ends with 8 errors.")
   >>> messages = io.StringIO(in_messages)

Starting audit...
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:6:5: Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'getVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'getVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:5: Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'setVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'setVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:28: Parameter version should be final. [FinalParameters]
[ERROR] /opt/atlassian/pipelines/agent/build/backend/framework/spring-rxjava/src/main/java/com/protmv/takeover/common/AppVersion.java:10:35: 'version' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 8 errors.

Now test it:

   >>> Parser("a", "b", "c").parse(messages)
   [{'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 1, 'level': 'HIGH', 'message': 'Missing package-info.java file. [JavadocPackage]', 'severity': 'HIGH'}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 4, 'level': 'HIGH', 'message': 'Missing a Javadoc comment. [JavadocVariable]', 'severity': 'HIGH', 'column': 5}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 6, 'level': 'HIGH', 'message': "Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'getVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'getVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]", 'severity': 'HIGH', 'column': 5}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 6, 'level': 'HIGH', 'message': 'Missing a Javadoc comment. [MissingJavadocMethod]', 'severity': 'HIGH', 'column': 5}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 10, 'level': 'HIGH', 'message': "Class 'AppVersion' looks like designed for extension (can be subclassed), but the method 'setVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AppVersion' final or making the method 'setVersion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]", 'severity': 'HIGH', 'column': 5}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 10, 'level': 'HIGH', 'message': 'Missing a Javadoc comment. [MissingJavadocMethod]', 'severity': 'HIGH', 'column': 5}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 10, 'level': 'HIGH', 'message': 'Parameter version should be final. [FinalParameters]', 'severity': 'HIGH', 'column': 28}, {'parser': 'a', 'fileType': 'b', 'file': 'c', 'line': 10, 'level': 'HIGH', 'message': "'version' hides a field. [HiddenField]", 'severity': 'HIGH', 'column': 35}]


Example 2
=========
